// Support ticket-related models

model SupportTicket {
  id           String             @id @default(auto()) @map("_id") @db.ObjectId
  ticketNumber String             @unique
  subject      String
  description  String
  userId       String             @db.ObjectId
  user         User               @relation("TicketCreator", fields: [userId], references: [id])
  status       TicketStatus       @default(OPEN)
  priority     TicketPriority     @default(NORMAL)
  assignedTo   String?            @db.ObjectId
  assignee     User?              @relation("TicketAssignee", fields: [assignedTo], references: [id])
  messages     TicketMessage[]
  attachments  TicketAttachment[]
  category     String
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  resolvedAt   DateTime?

  @@index([userId])
  @@index([status])
  @@index([assignedTo])
}

model TicketMessage {
  id          String             @id @default(auto()) @map("_id") @db.ObjectId
  ticketId    String             @db.ObjectId
  ticket      SupportTicket      @relation(fields: [ticketId], references: [id], onDelete: Cascade)
  senderId    String             @db.ObjectId
  message     String
  attachments TicketAttachment[]
  createdAt   DateTime           @default(now())

  @@index([ticketId])
}

model TicketAttachment {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  ticketId  String?        @db.ObjectId
  ticket    SupportTicket? @relation(fields: [ticketId], references: [id], onDelete: Cascade)
  messageId String?        @db.ObjectId
  message   TicketMessage? @relation(fields: [messageId], references: [id], onDelete: Cascade)
  fileUrl   String
  fileName  String
  fileType  String
  fileSize  Int
  createdAt DateTime       @default(now())

  @@index([ticketId])
  @@index([messageId])
}
