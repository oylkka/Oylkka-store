// Order-related models

model Order {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  orderNumber   String        @unique
  userId        String        @db.ObjectId
  user          User          @relation("UserOrders", fields: [userId], references: [id])
  status        OrderStatus   @default(PENDING)
  paymentStatus PaymentStatus @default(PENDING)
  paymentMethod PaymentMethod
  items         OrderItem[]

  // Financial details
  subtotal Float
  tax      Float
  shipping Float
  discount Float  @default(0)
  total    Float
  currency String @default("USD")

  // Addresses
  shippingAddress Address
  billingAddress  Address?

  // Shipping details
  trackingNumber    String?
  carrier           String?
  estimatedDelivery DateTime?

  // Coupon/Discount
  couponCode     String?
  couponDiscount Float   @default(0)

  // Additional information
  notes       String?
  giftMessage String?
  metadata    Json?
  invoice     Invoice?

  // Refund
  refundAmount Float?
  refundReason String?
  refundedAt   DateTime?

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([status])
  @@index([paymentStatus])
}

model OrderItem {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  orderId     String          @db.ObjectId
  order       Order           @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productSku  String
  productName String
  shopId      String?         @db.ObjectId
  variantInfo Json?
  quantity    Int
  price       Float
  discount    Float           @default(0)
  weight      Float?
  status      OrderItemStatus @default(PROCESSING)
  isReviewed  Boolean         @default(false)
  image       String

  @@index([orderId])
  @@index([productSku])
  @@index([shopId])
}

model Invoice {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId       String   @unique @db.ObjectId
  order         Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  invoiceNumber String   @unique
  pdfUrl        String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model BkashToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
